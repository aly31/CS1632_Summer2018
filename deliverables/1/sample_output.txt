# Note - this CORRECT output for deliverable 1.
# Lines that begin with a # are comments
# Unix commands are prefaced with a "$" (do not type the dollar symbol)
# In the case of ambiguities in requirements, you may assume that this is
# correct output.

# Invalid number of arguments

$ ruby connect_four.rb 1 2 3
Usage:
ruby connect_four.rb *x*
*x* should be a nonnegative integer

# No arguments

$ ruby connect_four.rb
Usage:
ruby connect_four.rb *x*
*x* should be a nonnegative integer

# Invalid argument

$ ruby connect_four.rb arglebargle
Usage:
ruby connect_four.rb *x*
*x* should be a nonnegative integer

# Game 1 - X wins on a diagonal

$ ruby connect_four.rb 5
01234
.....
.....
.....
.....
.....
Player X, enter move > 0
01234
.....
.....
.....
.....
X....
Player O, enter move > 0
01234
.....
.....
.....
O....
X....
Player X, enter move > 3
01234
.....
.....
.....
O....
X..X.
Player O, enter move > 0
01234
.....
.....
O....
O....
X..X.
Player X, enter move > 0
01234
.....
X....
O....
O....
X..X.
Player O, enter move > 1
01234
.....
X....
O....
O....
XO.X.
Player X, enter move > 1
01234
.....
X....
O....
OX...
XO.X.
Player O, enter move > 2
01234
.....
X....
O....
OX...
XOOX.
Player X, enter move > 1
01234
.....
X....
OX...
OX...
XOOX.
Player O, enter move > 4
01234
.....
X....
OX...
OX...
XOOXO
Player X, enter move > 2
01234
.....
X....
OX...
OXX..
XOOXO
Player X won!

# Game 2 - Player X wins on a vertical

$ ruby connect_four.rb 12
012345678901
............
............
............
............
............
............
............
............
............
............
............
............
Player X, enter move > 0
012345678901
............
............
............
............
............
............
............
............
............
............
............
X...........
Player O, enter move > 10
012345678901
............
............
............
............
............
............
............
............
............
............
............
X.........O.
Player X, enter move > 0
012345678901
............
............
............
............
............
............
............
............
............
............
X...........
X.........O.
Player O, enter move > 11
012345678901
............
............
............
............
............
............
............
............
............
............
X...........
X.........OO
Player X, enter move > 0
012345678901
............
............
............
............
............
............
............
............
............
X...........
X...........
X.........OO
Player O, enter move > 11
012345678901
............
............
............
............
............
............
............
............
............
X...........
X..........O
X.........OO
Player X, enter move > 0
012345678901
............
............
............
............
............
............
............
............
X...........
X...........
X..........O
X.........OO
Player X won!

# Game 3 - Player O wins on a horizontal

(23332) $ ruby connect_four.rb 5
01234
.....
.....
.....
.....
.....
Player X, enter move > 0
01234
.....
.....
.....
.....
X....
Player O, enter move > 1
01234
.....
.....
.....
.....
XO...
Player X, enter move > 1
01234
.....
.....
.....
.X...
XO...
Player O, enter move > 2
01234
.....
.....
.....
.X...
XOO..
Player X, enter move > 0
01234
.....
.....
.....
XX...
XOO..
Player O, enter move > 3
01234
.....
.....
.....
XX...
XOOO.
Player X, enter move > 2
01234
.....
.....
.....
XXX..
XOOO.
Player O, enter move > 4
01234
.....
.....
.....
XXX..
XOOOO
Player O won!

# Game 4 - Game ends in a tie

$ ruby connect_four.rb 4
0123
....
....
....
....
Player X, enter move > 0
0123
....
....
....
X...
Player O, enter move > 1
0123
....
....
....
XO..
Player X, enter move > 2
0123
....
....
....
XOX.
Player O, enter move > 3
0123
....
....
....
XOXO
Player X, enter move > 3
0123
....
....
...X
XOXO
Player O, enter move > 2
0123
....
....
..OX
XOXO
Player X, enter move > 1
0123
....
....
.XOX
XOXO
Player O, enter move > 0
0123
....
....
OXOX
XOXO
Player X, enter move > 0
0123
....
X...
OXOX
XOXO
Player O, enter move > 1
0123
....
XO..
OXOX
XOXO
Player X, enter move > 2
0123
....
XOX.
OXOX
XOXO
Player O, enter move > 3
0123
....
XOXO
OXOX
XOXO
Player X, enter move > 3
0123
...X
XOXO
OXOX
XOXO
Player O, enter move > 2
0123
..OX
XOXO
OXOX
XOXO
Player X, enter move > 1
0123
.XOX
XOXO
OXOX
XOXO
Player O, enter move > 0
0123
OXOX
XOXO
OXOX
XOXO
It's a tie

# Game 5 - Players try some invalid moves

(23334) $ ruby connect_four.rb 4
0123
....
....
....
....
Player X, enter move > 0
0123
....
....
....
X...
Player O, enter move > 0
0123
....
....
O...
X...
Player X, enter move > 0
0123
....
X...
O...
X...
Player O, enter move > blipblop
blipblop is an invalid move.
Please enter one of the following:
1. A valid column number
2. 'flip' to flip the board
3. 'rot' to rotate the board
0123
....
X...
O...
X...
Player O, enter move > -9
-9 is an invalid move.
Please enter one of the following:
1. A valid column number
2. 'flip' to flip the board
3. 'rot' to rotate the board
0123
....
X...
O...
X...
Player O, enter move > 900
900 is an invalid move.
Please enter one of the following:
1. A valid column number
2. 'flip' to flip the board
3. 'rot' to rotate the board
0123
....
X...
O...
X...
Player O, enter move > 0
0123
O...
X...
O...
X...
Player X, enter move > 0
0 is an invalid move.
Please enter one of the following:
1. A valid column number
2. 'flip' to flip the board
3. 'rot' to rotate the board
0123
O...
X...
O...
X...
Player X, enter move > 2
0123
O...
X...
O...
X.X.
Player O, enter move > 2
0123
O...
X...
O.O.
X.X.
Player X, enter move > 2
0123
O...
X.X.
O.O.
X.X.
Player O, enter move > 2
0123
O.O.
X.X.
O.O.
X.X.
Player X, enter move > 2
2 is an invalid move.
Please enter one of the following:
1. A valid column number
2. 'flip' to flip the board
3. 'rot' to rotate the board
0123
O.O.
X.X.
O.O.
X.X.
Player X, enter move > 3
0123
O.O.
X.X.
O.O.
X.XX
Player O, enter move > 3
0123
O.O.
X.X.
O.OO
X.XX
Player X, enter move > 1
0123
O.O.
X.X.
O.OO
XXXX
Player X won!

# Game 6 - Rotating and Flipping

$ ruby connect_four.rb 4
0123
....
....
....
....
Player X, enter move > flip
0123
....
....
....
....
Player O, enter move > 1
0123
....
....
....
.O..
Player X, enter move > 1
0123
....
....
.X..
.O..
Player O, enter move > rot
0123
....
....
....
OX..
Player X, enter move > 2
0123
....
....
....
OXX.
Player O, enter move > 0
0123
....
....
O...
OXX.
Player X, enter move > rot
0123
....
O...
X...
XO..
Player O, enter move > flip
0123
....
X...
X...
OO..
Player X, enter move > 2
0123
....
X...
X...
OOX.
Player O, enter move > 1
0123
....
X...
XO..
OOX.
Player X, enter move > 0
0123
X...
X...
XO..
OOX.
Player O, enter move > 2
0123
X...
X...
XOO.
OOX.
Player X, enter move > rot
0123
....
OX..
OO..
XOXX
Player O, enter move > 2
0123
....
OX..
OOO.
XOXX
Player X, enter move > 3
0123
....
OX..
OOOX
XOXX
Player O, enter move > flip
0123
....
XO..
OOXX
OXOX
Player X, enter move > rot
0123
OO..
XO..
OXX.
XXO.
Player O, enter move > 3
0123
OO..
XO..
OXX.
XXOO
Player X, enter move > 2
0123
OO..
XOX.
OXX.
XXOO
Player O, enter move > flip
0123
XX..
OXO.
XOX.
OOXO
Player X, enter move > 3
0123
XX..
OXO.
XOXX
OOXO
Player O, enter move > 2
0123
XXO.
OXO.
XOXX
OOXO
Player X, enter move > flip
0123
OOX.
XOX.
OXOO
XXOX
Player O, enter move > rot
0123
XO..
XXXO
OOOO
XOXX
Player O won!
